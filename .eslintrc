{
  "parser"  : "babel-eslint",
  "plugins": [
    "import",
    "chai-expect",
    "chai-friendly"
  ],
  "env": {
    "mocha": true
  },
  "extends" : ["airbnb"],
  "rules": {
    "semi": ["error", "never"], // we don't like semicolons
    "arrow-parens": "off",
    "comma-dangle": "off", // Nobody cares about commas.
    "default-case": "off", // Required default case is nonsense.
    "new-cap": ["error", {"capIsNew": false, "newIsCap": true}], // For Record() etc.
    "no-floating-decimal": "off", // .5 is just fine.
    "no-shadow": "error", // Shadowing is a nice language feature, but it can kick
    // eslint-plugin-import
    "import/no-unresolved": ["error", {"commonjs": true}],
    "import/named": "error",
    "import/default": "error",
    "import/namespace": "error",
    "import/export": "error",
    "import/prefer-default-export": "off",
    // BB rules soften
    "max-len": "off",
    "key-spacing": ["error", {"beforeColon": false, "afterColon": true, "mode": "minimum"}], // Enable use of nice block object creation.
    "no-use-before-define": "off", // Enable to define styles after using them in component.
    "space-before-function-paren": ["error", "never"],    
    "react/prefer-stateless-function": "off", // Enable stateful components
    "react/jsx-filename-extension": ["warn", { "extensions": [".js", ".jsx"] }],
    "react/sort-comp": "off",
    "react/no-unused-prop-types": "off",
    // chai rules
    "chai-expect/missing-assertion": 2,
    "chai-expect/terminating-properties": 1,
    "no-unused-expressions": 0,
    "no-unused-vars": "warn"
  },
  "globals": {
    "test": false,
    "expect": false,
    "after": false,
    "afterEach": false,
    "before": false,
    "beforeEach": false,
    "console": false,
    "describe": false,
    "it": false,
    "jest": false,
    "module": false,
    "process": false,
    "require": false,
    "window": false,
    "fetch": false
  },
  "settings": {
    "import/ignore": [
      "node_modules",
      "\\.json$"
    ],
    "import/parser": "babel-eslint",
    "import/resolve": {
      "extensions": [
        ".js",
        ".jsx",
        ".json"
      ]
    }
  }
}
